@using QPC.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<div class="container login-form">
    <div class="row">
        <div class="col s8  push-4">
            <div class="card z-depth-3 ">
                <div class="card-content">
                    <span class="card-title">@ViewBag.Title</span>
                    <hr />
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "container", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.Email)
                                @Html.TextBoxFor(m => m.Email, new { @class = "validate", @type = "email", @id = "email" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.Password)
                                @Html.PasswordFor(m => m.Password, new { @class = "validate", @type = "password", @id = "password" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col s10 offset-2">
                                <input type="submit" value="Log in" class="btn" />
                            </div>
                        </div>
                        <p>
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}